# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Ticket\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    ########## INFRASTRUCTURE ##########

    Ticket\Infrastructure\Event\EventListener\Symfony\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    Ticket\Infrastructure\Delivery\Api\Controller\CategoryController:
        public: true

    ########## DOMAIN ##########

    Ticket\Domain\Category\CategoryRepository:
        class: Ticket\Infrastructure\Domain\Category\DoctrineCategoryRepository

    Ticket\Domain\Ticket\TicketRepository:
        class: Ticket\Infrastructure\Domain\Ticket\DoctrineTicketRepository

    Ticket\Domain\Comment\CommentRepository:
        class: Ticket\Infrastructure\Domain\Comment\DoctrineCommentRepository

    ########## APPLICATION ##########

    Ticket\Application\UseCase\CreateCategory\CreateCategoryHandler:
        class: Ticket\Application\UseCase\CreateCategory\CreateCategoryHandler
        tags:
            - {
                name: tactician.handler,
                command: Ticket\Application\UseCase\CreateCategory\CreateCategoryCommand
            }

    Ticket\Application\UseCase\EditCategory\EditCategoryHandler:
        class: Ticket\Application\UseCase\EditCategory\EditCategoryHandler
        tags:
            - {
                name: tactician.handler,
                command: Ticket\Application\UseCase\EditCategory\EditCategoryCommand
            }

    Ticket\Application\UseCase\CreateTicket\CreateTicketHandler:
        class: Ticket\Application\UseCase\CreateTicket\CreateTicketHandler
        tags:
            - {
                name: tactician.handler,
                command: Ticket\Application\UseCase\CreateTicket\CreateTicketCommand
            }

    Ticket\Application\UseCase\EditTicket\EditTicketHandler:
        class: Ticket\Application\UseCase\EditTicket\EditTicketHandler
        tags:
            - {
                name: tactician.handler,
                command: Ticket\Application\UseCase\EditTicket\EditTicketCommand
            }

    Ticket\Application\UseCase\CloseTicket\CloseTicketHandler:
        class: Ticket\Application\UseCase\CloseTicket\CloseTicketHandler
        tags:
            - {
                name: tactician.handler,
                command: Ticket\Application\UseCase\CloseTicket\CloseTicketCommand
            }

    Ticket\Application\UseCase\ResolveTicket\ResolveTicketHandler:
        class: Ticket\Application\UseCase\ResolveTicket\ResolveTicketHandler
        tags:
            - {
                name: tactician.handler,
                command: Ticket\Application\UseCase\ResolveTicket\ResolveTicketCommand
            }

    Ticket\Application\UseCase\AddComment\AddCommentHandler:
        class: Ticket\Application\UseCase\AddComment\AddCommentHandler
        tags:
            - {
                name: tactician.handler,
                command: Ticket\Application\UseCase\AddComment\AddCommentCommand
            }

    Ticket\Application\UseCase\EditComment\EditCommentHandler:
        class: Ticket\Application\UseCase\EditComment\EditCommentHandler
        tags:
            - {
                name: tactician.handler,
                command: Ticket\Application\UseCase\EditComment\EditCommentCommand
            }